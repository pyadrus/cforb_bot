import os
import sqlite3

import openpyxl
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ParseMode
from loguru import logger

from database.database import recording_data_of_users_who_launched_the_bot
from keyboards.admin_keyboards.admin_keyboards import admin_create_greeting_keyboard
from system.dispatcher import bot, dp


@dp.message_handler(commands=['admin_start'])
async def admin_send_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã"""
    await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    join_date = message.date.strftime("%Y-%m-%d %H:%M:%S")

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} ({user_id}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –≤ {join_date}")
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    recording_data_of_users_who_launched_the_bot(user_id, username, first_name, last_name, join_date)

    greeting_keyboard = admin_create_greeting_keyboard()
    data = (f"<b>–ü—Ä–∏–≤–µ—Ç –∞–¥–º–∏–Ω {first_name} {last_name}, —Å–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å –Ω–∞ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ ü§ñ!</b>\n\n"
            f"–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ /start_admin")
    await bot.send_message(message.from_user.id, text=data, reply_markup=greeting_keyboard, parse_mode=ParseMode.HTML)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ Excel —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–æ–≤
def create_excel_file(orders):
    workbook = openpyxl.Workbook()
    sheet = workbook.active
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
    sheet['A1'] = 'ID –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    sheet['B1'] = '–ò–º—è'
    sheet['C1'] = '–§–∞–º–∏–ª–∏—è'
    sheet['D1'] = '–ì–æ—Ä–æ–¥'
    sheet['E1'] = '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
    sheet['F1'] = '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–æ–≤
    for index, order in enumerate(orders, start=2):
        sheet.cell(row=index, column=1).value = order[0]  # ID –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sheet.cell(row=index, column=2).value = order[1]  # –ò–º—è
        sheet.cell(row=index, column=3).value = order[2]  # –§–∞–º–∏–ª–∏—è
        sheet.cell(row=index, column=4).value = order[3]  # –ì–æ—Ä–æ–¥
        sheet.cell(row=index, column=5).value = order[4]  # –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        sheet.cell(row=index, column=6).value = order[5]  # –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

    return workbook


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Excel
@dp.callback_query_handler(lambda c: c.data == 'get_a_list_of_users_registered_in_the_bot')
async def export_data(message: types.Message):
    try:
        if message.from_user.id not in [535185511]:
            await message.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.')
            return
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
        conn = sqlite3.connect('your_database.db')
        cursor = conn.cursor()
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SELECT * FROM users")
        orders = cursor.fetchall()
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ Excel
        workbook = create_excel_file(orders)
        filename = '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–æ—Ç–µ.xlsx'
        workbook.save(filename)  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        with open(filename, 'rb') as file:
            text = ("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–µ\n\n"
                    "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏ –Ω–∞ /start_admin")
            await bot.send_document(message.from_user.id, document=file, caption=text)  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        os.remove(filename)  # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    except Exception as e:
        logger.error(e)


def create_excel_file_start(orders):
    workbook = openpyxl.Workbook()
    sheet = workbook.active
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
    sheet['A1'] = 'user_id'
    sheet['B1'] = 'username'
    sheet['C1'] = 'first_name'
    sheet['D1'] = 'last_name'
    sheet['E1'] = 'join_date'
    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–æ–≤
    for index, order in enumerate(orders, start=2):
        sheet.cell(row=index, column=1).value = order[0]  # user_id
        sheet.cell(row=index, column=2).value = order[1]  # username
        sheet.cell(row=index, column=3).value = order[2]  # first_name
        sheet.cell(row=index, column=4).value = order[3]  # last_name
        sheet.cell(row=index, column=5).value = order[4]  # join_date

    return workbook


@dp.callback_query_handler(lambda c: c.data == 'get_users_who_launched_the_bot')
async def get_users_who_launched_the_bot(message: types.Message):
    try:
        if message.from_user.id not in [535185511]:
            await message.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.')
            return
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
        conn = sqlite3.connect('your_database.db')
        cursor = conn.cursor()
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SELECT * FROM users_start")
        orders = cursor.fetchall()
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ Excel
        workbook = create_excel_file_start(orders)
        filename = '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–ø—É—Å—Ç–∏–≤—à–∏—Ö –±–æ—Ç–∞.xlsx'
        workbook.save(filename)  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        with open(filename, 'rb') as file:
            text = ("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–ø—É—Å—Ç–∏–≤—à–∏—Ö –±–æ—Ç–∞\n\n"
                    "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏ –Ω–∞ /start_admin")
            await bot.send_document(message.from_user.id, document=file, caption=text)  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        os.remove(filename)  # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    except Exception as e:
        logger.error(e)


def register_admin_greeting_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    dp.register_message_handler(admin_send_start)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
    dp.register_message_handler(export_data)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
    dp.register_message_handler(get_users_who_launched_the_bot)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
