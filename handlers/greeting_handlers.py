import sqlite3

from aiogram import types
from aiogram.dispatcher import FSMContext  # –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import ParseMode
from loguru import logger

from database.database import recording_data_of_users_who_launched_the_bot
from keyboards.user_keyboards import create_greeting_keyboard
from system.dispatcher import bot, dp


@dp.message_handler(commands=['start'])
async def send_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã"""
    await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    join_date = message.date.strftime("%Y-%m-%d %H:%M:%S")

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} ({user_id}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –≤ {join_date}")
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    recording_data_of_users_who_launched_the_bot(user_id, username, first_name, last_name, join_date)

    user_exists = check_user_exists_in_db(user_id)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if user_exists:
        greeting_keyboard = create_greeting_keyboard()
        reply_markup = types.ReplyKeyboardRemove()
        await message.reply("/start", reply_markup=reply_markup)
        with open("media/photos/greeting.jpg", "rb") as photo_file:  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –¥–ª—è –ø–æ—Å—Ç–∞
            data = (f"<b>{first_name} {last_name}, —Å–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!</b>\n\n"
                    "<b>üá®üá≥ –ö–æ–º–ø–∞–Ω–∏—è CFB - –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥ –ø–æ –±–∏–∑–Ω–µ—Å—É —Å –ö–∏—Ç–∞–µ–º!</b>\n\n"
                    "‚Ä¢ –° –ø–æ–ª–Ω—ã–º —Å–ø–∏—Å–∫–æ–º —É—Å–ª—É–≥ –í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –≤ –º–µ–Ω—é –±–æ—Ç–∞.\n\n"
                    "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –Ω–µ —É–¥–∞–ª—è–π—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∏–∑ —Å–≤–æ–∏—Ö —á–∞—Ç–æ–≤!\n\n"
                    "‚Ä¢ –£ –í–∞—Å –ø–æ—è–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º –∏ —Ç.–¥.\n\n"
                    "<i>–°–∞–π—Ç: www.cforb.ru</i>\n"
                    "<i>Telegram: https://t.me/cforb_tg</i>\n"
                    "<i>–í–∫–æ–Ω—Ç–∞–∫—Ç–µ: https://vk.com/cforb</i>\n"
                    "<i>Instagram: https://www.instagram.com/cforb_in</i>\n"
                    "<i>YouTube: https://www.youtube.com/@cforb_tube</i>")
            await bot.send_photo(message.from_user.id, caption=data, photo=photo_file,
                                 reply_markup=greeting_keyboard, parse_mode=ParseMode.HTML)
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        sign_up_text = ("‚ö†Ô∏è <b>–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ</b> ‚ö†Ô∏è\n\n"
                        "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å</b>.\n\n"
                        "–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ /start")

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–º–æ—â—å—é my_details() (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
        my_details_key = create_my_details_keyboard()
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await bot.send_message(message.from_user.id, sign_up_text,
                               reply_markup=my_details_key,
                               parse_mode=ParseMode.HTML,
                               disable_web_page_preview=True)


def create_my_details_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ'"""
    my_details_keyboard = InlineKeyboardMarkup()
    my_details_button = InlineKeyboardButton(text='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', callback_data='my_details')

    my_details_keyboard.row(my_details_button)  # –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
    return my_details_keyboard


def check_user_exists_in_db(user_id):
    # –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –≤–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect("your_database.db")  # –ó–∞–º–µ–Ω–∏—Ç–µ "your_database.db" –Ω–∞ –∏–º—è –≤–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor = conn.cursor()
    # –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –µ–≥–æ user_id
    cursor.execute("SELECT COUNT(*) FROM users WHERE user_id = ?", (user_id,))
    # –ò–∑–≤–ª–µ–∫–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞
    user_count = cursor.fetchone()[0]
    conn.close()
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º user_id –Ω–∞–π–¥–µ–Ω (user_count –±–æ–ª—å—à–µ 0), –≤–µ—Ä–Ω–∏—Ç–µ True, –∏–Ω–∞—á–µ –≤–µ—Ä–Ω–∏—Ç–µ False
    return user_count > 0


def register_greeting_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    dp.register_message_handler(send_start)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
