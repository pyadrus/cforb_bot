from aiogram import types
from aiogram.dispatcher import FSMContext  # –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
from loguru import logger

from keyboards.user_keyboards import types_of_packaging_keyboard, types_of_packaging_keyboard_menu
from system.dispatcher import bot, dp


@dp.callback_query_handler(lambda c: c.data == "types_of_packaging")
async def types_of_packaging(callback_query: types.CallbackQuery, state: FSMContext):
    """–í–∏–¥—ã —É–ø–∞–∫–æ–≤–∫–∏"""
    try:
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        greeting_message = (
            f"<b>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –∫–∞–∫–∏–µ —É–ø–∞–∫–æ–≤–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –∫–∞–∫ –≤—ã–≥–ª—è–¥—è—Ç, –∏ —Å–∫–æ–ª—å–∫–æ —Å—Ç–æ—è—Ç.</b>\n\n"
            f"<b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏: @cargo_cfb</b>")
        types_of_packaging_key = types_of_packaging_keyboard()
        await bot.send_message(callback_query.from_user.id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                               text=greeting_message,  # –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
                               reply_markup=types_of_packaging_key,
                               parse_mode=types.ParseMode.HTML)  # –¢–µ–∫—Å—Ç –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    except Exception as error:
        logger.exception(error)


@dp.callback_query_handler(lambda c: c.data == "bag_tape")
async def bag_tape(callback_query: types.CallbackQuery, state: FSMContext):
    """–ú–µ—à–æ–∫ + —Å–∫–æ—Ç—á"""
    try:
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        greeting_message = (f"–í—Å—Ç–∞–≤–∫–∞ –≤–∏–¥–µ–æ https://youtube.com/shorts/E2LFiy8iF0g —É–ø–∞–∫–æ–≤–∫–∏ –∏ —Ç–µ–∫—Å—Ç:\n\n"
                            f"<b>–ú–µ—à–æ–∫ + —Å–∫–æ—Ç—á:</b> –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —É–ø–∞–∫–æ–≤–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—à–∫–∞ –∏ —É–ø–∞–∫–æ–≤–æ—á–Ω–æ–≥–æ "
                            f"—Å–∫–æ—Ç—á–∞, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∏–ª—è –∏ –º—è–≥–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤.\n\n"
                            f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–∏ 5$ –º–µ—Å—Ç–æ</b>\n\n"
                            f"<b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏: @cargo_cfb</b>")
        types_of_packaging_key = types_of_packaging_keyboard_menu()
        await bot.send_message(callback_query.from_user.id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                               text=greeting_message,  # –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
                               reply_markup=types_of_packaging_key,
                               parse_mode=types.ParseMode.HTML)  # –¢–µ–∫—Å—Ç –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    except Exception as error:
        logger.exception(error)


@dp.callback_query_handler(lambda c: c.data == "box_bag_tape")
async def box_bag_tape(callback_query: types.CallbackQuery, state: FSMContext):
    """–ö–æ—Ä–æ–±–∫–∞ + –º–µ—à–æ–∫ + —Å–∫–æ—Ç—á"""
    try:
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        greeting_message = (
            f"–í—Å—Ç–∞–≤–∫–∞ –≤–∏–¥–µ–æ https://youtube.com/shorts/DX-EFbUkOf8 —É–ø–∞–∫–æ–≤–∫–∏ –∏ —Ç–µ–∫—Å—Ç:\n\n"
            f"<b>–ö—Ä–æ–±–∫–∞ + –º–µ—à–æ–∫ + —Å–∫–æ—Ç—á:</b> –µ—Å–ª–∏ —É –≤–∞—Å –º–Ω–æ–≥–æ —Ä–∞–∑–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ç–æ–º —á–∏—Å–ª–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –∫–æ—Ä–æ–±–æ—á–∫–∏, –≤–µ—Å—å "
            f"—Ç–æ–≤–∞—Ä —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –≤ –Ω–∞—à—É –∫–æ—Ä–æ–±–∫—É, –¥–∞–ª–µ–µ —É–ø–∞–∫–æ–≤–∫–∞ –≤ –º–µ—à–æ–∫ –∏ —É–ø–∞–∫–æ–≤–æ—á–Ω—ã–π —Å–∫–æ—Ç—á.\n\n"
            f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–∏ 8$ –º–µ—Å—Ç–æ</b>\n\n"
            f"<b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏: @cargo_cfb</b>")
        types_of_packaging_key = types_of_packaging_keyboard_menu()
        await bot.send_message(callback_query.from_user.id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                               text=greeting_message,  # –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
                               reply_markup=types_of_packaging_key,
                               parse_mode=types.ParseMode.HTML)  # –¢–µ–∫—Å—Ç –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    except Exception as error:
        logger.exception(error)


@dp.callback_query_handler(lambda c: c.data == "wooden_sheathing_bag_tape")
async def wooden_sheathing_bag_tape(callback_query: types.CallbackQuery, state: FSMContext):
    """–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è –æ–±—Ä–µ—à–µ—Ç–∫–∞ + –º–µ—à–æ–∫ + —Å–∫–æ—Ç—á"""
    try:
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        greeting_message = (
            f"–í—Å—Ç–∞–≤–∫–∞ –≤–∏–¥–µ–æ https://youtube.com/shorts/4ogIlLQUipc —É–ø–∞–∫–æ–≤–∫–∏ –∏ —Ç–µ–∫—Å—Ç:\n\n"
            f"<b>–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è –æ–±—Ä–µ—à–µ—Ç–∫–∞ + –º–µ—à–æ–∫ + —Å–∫–æ—Ç—á:</b> –ö–∞—Ä–∫–∞—Å –∏–∑ –¥–µ—Ä–µ–≤—è–Ω–Ω—ã—Ö —Ä–µ—à–µ—Ç–æ–∫ (–¥–æ—Å–æ–∫, –±—Ä—É—Å—å–µ–≤), –∫–æ—Ç–æ—Ä—ã–π "
            f"—Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç —Ö–æ—Ä–æ—à–µ–π —Ñ–∏–∫—Å–∞—Ü–∏–∏ –≥—Ä—É–∑–∞ –∏ –µ–≥–æ –∑–∞—â–∏—Ç–µ –æ—Ç –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏—Ö –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π. –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –¥–ª—è —É–ø–∞–∫–æ–≤–∫–∏ "
            f"—Ö—Ä—É–ø–∫–æ–≥–æ –∏ –±—å—é—â–µ–≥–æ—Å—è —Ç–æ–≤–∞—Ä–∞. + –º–µ—à–æ–∫ + —Å–∫–æ—Ç—á\n\n"
            f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–∏ 10$ –º–µ—Å—Ç–æ</b>\n\n"
            f"<b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏: @cargo_cfb</b>")
        types_of_packaging_key = types_of_packaging_keyboard_menu()
        await bot.send_message(callback_query.from_user.id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                               text=greeting_message,  # –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
                               reply_markup=types_of_packaging_key,
                               parse_mode=types.ParseMode.HTML)  # –¢–µ–∫—Å—Ç –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    except Exception as error:
        logger.exception(error)


@dp.callback_query_handler(lambda c: c.data == "wooden_corners_bag_tape")
async def wooden_corners_bag_tape(callback_query: types.CallbackQuery, state: FSMContext):
    """–î–µ—Ä–µ–≤—è–Ω–Ω—ã–µ —É–≥–æ–ª–∫–∏ + –º–µ—à–æ–∫ + —Å–∫–æ—Ç—á"""
    try:
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        greeting_message = (
            f"–í—Å—Ç–∞–≤–∫–∞ –≤–∏–¥–µ–æ https://youtube.com/shorts/QcXqjaESW7s —É–ø–∞–∫–æ–≤–∫–∏ –∏ —Ç–µ–∫—Å—Ç:\n\n"
            f"<b>–£–≥–æ–ª–∫–∏ + –º–µ—à–æ–∫ + —Å–∫–æ—Ç—á:</b> –õ–µ–≥—á–µ —á–µ–º –æ–±—Ä–µ—à–µ—Ç–∫–∞, –¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ä–º—É –∫–æ—Ä–æ–±–∫–∏, –Ω–æ –º–µ–Ω–µ–µ –∑–∞—â–∏—â–µ–Ω–Ω–∞—è, —Ç.–∫ "
            f"–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫—Ä—ã—Ç–∞—è.\n\n"
            f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–∏ 10$ –º–µ—Å—Ç–æ</b>\n\n"
            f"<b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏: @cargo_cfb</b>\n\n")
        types_of_packaging_key = types_of_packaging_keyboard_menu()
        await bot.send_message(callback_query.from_user.id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                               text=greeting_message,  # –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
                               reply_markup=types_of_packaging_key,
                               parse_mode=types.ParseMode.HTML)  # –¢–µ–∫—Å—Ç –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    except Exception as error:
        logger.exception(error)


@dp.callback_query_handler(lambda c: c.data == "pallet_in_crate")
async def pallet_in_crate(callback_query: types.CallbackQuery, state: FSMContext):
    """–ü–∞–ª–ª–µ—Ç –≤ –æ–±—Ä–µ—à–µ—Ç–∫–µ"""
    try:
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        greeting_message = (
            f"–í—Å—Ç–∞–≤–∫–∞ –≤–∏–¥–µ–æ https://youtube.com/shorts/QcXqjaESW7s —É–ø–∞–∫–æ–≤–∫–∏ –∏ —Ç–µ–∫—Å—Ç:\n\n"
            f"<b>–ü–∞–ª–ª–µ—Ç –≤ –æ–±—Ä–µ—à–µ—Ç–∫–µ:</b> –í–∏–¥ —É–ø–∞–∫–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫—Ä—É–ø–Ω–æ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã—Ö –∏–ª–∏ —Ö—Ä—É–ø–∫–∏—Ö –≥—Ä—É–∑–æ–≤, "
            f"–ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –ø–æ–¥–¥–æ–Ω —Å –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–º–∏ –±–æ—Ä—Ç–∞–º–∏ –∫–∞–∫ —É –æ–±—Ä–µ—à–µ—Ç–∫–∏. –ü–æ–≥—Ä—É–∑–æ—á–Ω–æ-—Ä–∞–∑–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã "
            f"—Ç–æ–≤–∞—Ä–æ–≤, —É–ø–∞–∫–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –ø–æ–º–æ—â–∏ –≤–∏–ª–æ—á–Ω–æ–≥–æ –ø–æ–≥—Ä—É–∑—á–∏–∫–∞.\n\n"
            f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–∏ 45$ –∑–∞ –∫—É–±</b>\n\n"
            f"<b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏: @cargo_cfb</b>")
        types_of_packaging_key = types_of_packaging_keyboard_menu()
        await bot.send_message(callback_query.from_user.id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                               text=greeting_message,  # –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
                               reply_markup=types_of_packaging_key,
                               parse_mode=types.ParseMode.HTML)  # –¢–µ–∫—Å—Ç –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    except Exception as error:
        logger.exception(error)


@dp.callback_query_handler(lambda c: c.data == "pallet_with_a_solid_wooden_box")
async def pallet_with_a_solid_wooden_box(callback_query: types.CallbackQuery, state: FSMContext):
    """–ü–∞–ª–ª–µ—Ç —Å –≥–ª—É—Ö–∏–º –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–º –∫–æ—Ä–æ–±–æ–º"""
    try:
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        greeting_message = (
            f"<b>–ü–∞–ª–ª–µ—Ç —Å –≥–ª—É—Ö–∏–º –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–º –∫–æ—Ä–æ–±–æ–º:</b> –í–∏–¥ —É–ø–∞–∫–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫—Ä—É–ø–Ω–æ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã—Ö –∏–ª–∏ —Ö—Ä—É–ø–∫–∏—Ö "
            f"–≥—Ä—É–∑–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –ø–æ–¥–¥–æ–Ω —Å –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–º–∏ –±–æ—Ä—Ç–∞–º–∏ –∫–∞–∫ —É –æ–±—Ä–µ—à–µ—Ç–∫–∏. –ü–æ–≥—Ä—É–∑–æ—á–Ω–æ-—Ä–∞–∑–≥—Ä—É–∑–æ—á–Ω—ã–µ "
            f"—Ä–∞–±–æ—Ç—ã —Ç–æ–≤–∞—Ä–æ–≤, —É–ø–∞–∫–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –ø–æ–º–æ—â–∏ –≤–∏–ª–æ—á–Ω–æ–≥–æ –ø–æ–≥—Ä—É–∑—á–∏–∫–∞.\n\n"
            f"–§–æ—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n"
            f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–∏ 90-100$ –∑–∞ –∫—É–±</b>\n\n"
            f"<b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏: @cargo_cfb</b>\n\n")
        types_of_packaging_key = types_of_packaging_keyboard_menu()
        await bot.send_message(callback_query.from_user.id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                               text=greeting_message,  # –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
                               reply_markup=types_of_packaging_key,
                               parse_mode=types.ParseMode.HTML)  # –¢–µ–∫—Å—Ç –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    except Exception as error:
        logger.exception(error)


def register_types_of_packaging_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    dp.register_message_handler(types_of_packaging)
    dp.register_message_handler(bag_tape)
    dp.register_message_handler(box_bag_tape)
    dp.register_message_handler(wooden_sheathing_bag_tape)
    dp.register_message_handler(wooden_corners_bag_tape)
    dp.register_message_handler(pallet_in_crate)
    dp.register_message_handler(pallet_with_a_solid_wooden_box)
