from aiogram import types
from aiogram.dispatcher import FSMContext  # –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
from loguru import logger

from keyboards.user_keyboards import keyboard_to_main_menu
from system.dispatcher import bot, dp


@dp.callback_query_handler(lambda c: c.data == "partnership_conditions_for_intermediaries_button")
async def partnership_conditions_for_intermediaries(callback_query: types.CallbackQuery, state: FSMContext):
    """–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤"""
    try:
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        greeting_message = (f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º! üåü –ï—Å–ª–∏ –≤—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å –ø–æ—Å—Ä–µ–¥–Ω–∏—á–µ—Å—Ç–≤–æ–º —Å –ö–∏—Ç–∞–µ–º, –¥–æ—Å—Ç–∞–≤–∫–æ–π –≥—Ä—É–∑–æ–≤ –∏–ª–∏ "
                            f"—É–ø—Ä–∞–≤–ª—è–µ—Ç–µ –∫–æ–º–ø–∞–Ω–∏–µ–π, –∫–∞–Ω–∞–ª–æ–º, –≥—Ä—É–ø–ø–æ–π –∏–ª–∏ –∫—É—Ä—Å–∞–º–∏, –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å "
                            f"–ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –Ω–∞–º–∏. ü§ù\n\n"
                            f"üåê –ü–æ—á–µ–º—É —Å –Ω–∞–º–∏?\n\n"
                            f"- –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –≤–∞—Å"
                            f"- –ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–µ —Ü–µ–Ω—ã –∏ —É–¥–æ–±—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã"
                            f"- –û–±–º–µ–Ω –æ–ø—ã—Ç–æ–º –∏ –∑–Ω–∞–Ω–∏—è–º–∏\n\n"
                            f"üíº –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≥–∏–±–∫–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ –ø–æ —Å–∏—Å—Ç–µ–º–µ '–ü—Ä–æ–º–æ–∫–æ–¥' –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–∞–π—Å. "
                            f"–ï—Å–ª–∏ –≤—ã –≤–µ—Ä–∏—Ç–µ —Å–≤–æ–µ–º—É –∫–∏—Ç–∞–π—Å–∫–æ–º—É –ø–∞—Ä—Ç–Ω–µ—Ä—É –Ω–∞ 100%, –º–æ–∂–µ—Ç –±—ã—Ç—å, –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ –∫–∏—Ç–∞–π—Ü–µ–≤ "
                            f"–Ω–∞ 90%.\n\n"
                            f"ü§ù <b>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏, –æ–±—Å—É–¥–∏–º –≤–∞—Ä–∏–∞–Ω—Ç—ã!</b>\n"
                            f"üì© –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ—Ç —Å –∫—Ä—É–ø–Ω—ã–º–∏ —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–∞–º–∏.\n\n"
                            f"üîó –ö–æ–Ω—Ç–∞–∫—Ç—ã: @cargo_cfb")
        main_menu_keyboard = keyboard_to_main_menu()
        with open('media/photos/partnership_conditions_for_intermediaries_button.jpg', 'rb') as photo_file:
            await bot.send_photo(callback_query.from_user.id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                                 caption=greeting_message,  # –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
                                 photo=photo_file,
                                 reply_markup=main_menu_keyboard,
                                 parse_mode=types.ParseMode.HTML)  # –¢–µ–∫—Å—Ç –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    except Exception as error:
        logger.exception(error)


def register_partnership_conditions_for_intermediaries_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    dp.register_message_handler(partnership_conditions_for_intermediaries)
